package TP4;
import io.jbotsim.core.Color;
import io.jbotsim.core.Message;
import io.jbotsim.core.Node;
import java.util.ArrayList;
import java.util.List;
/*R√©sum√© visuel du fonctionnement
1Ô∏è‚É£ Le n≈ìud de d√©part s‚Äôactive üî¥ et envoie des messages.
2Ô∏è‚É£ Chaque n≈ìud re√ßoit un message et choisit son premier exp√©diteur comme parent.
3Ô∏è‚É£ Il propage ensuite le message √† ses voisins.
4Ô∏è‚É£ L‚Äôarbre couvrant est form√© en suivant ces connexions.*/
public class TreeNode extends Node {
    Node parent = null; // Stocke le parent du n≈ìud dans l‚Äôarbre
    List<Node> children = new ArrayList<Node>(); // Liste des enfants (non utilis√©e ici)

    @Override
    public void onSelection(){
        parent = this; // Le n≈ìud s√©lectionn√© devient la racine
        sendAll(new Message(this)); // Envoie un message √† tous ses voisins
        setColor(Color.red); // Change la couleur pour indiquer qu‚Äôil est la racine
    }

    @Override
    public void onMessage(Message message){
        if(parent == null){ // Si le n≈ìud n'a pas encore de parent
            parent = message.getSender(); // L'exp√©diteur devient le parent
            getCommonLinkWith(parent).setWidth(4); // √âpaissit le lien avec le parent
            sendAll(new Message(parent)); // Propage le message aux voisins
        } else {
            if(message.getSender() == this){
                children.add(message.getSender()); // Ajoute un enfant (non utilis√© ici)
            }
        }
    }
}
